# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build pkg
 
on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '22'
           
    - name: Create Artifacts Directory
      run: mkdir -p artifacts

    - name: Building Backend with Maven
      run: |
           cd backend
           mvn -ntp clean package -DskipTests
           cp  target/*.jar ../artifacts/
   
    - name: Building Gemini with Maven
      run: |
           cd backend
           mvn -ntp clean package -DskipTests
           cp  target/*.jar ../artifacts/
    

    #Runs a set of commands using the runners shell
  
    - name: Upload repo to remote server
      env:
           SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
         ssh-agent -a $SSH_AUTH_SOCK > /dev/null
         ssh-add - <<< "${{ secrets.QUIZZIE_KEY }}"
         scp -o StrictHostKeyChecking=no -r -P ${{ secrets.QUIZZIE_PORT }} artifacts ${{ secrets.QUIZZIE_USERNAME }}@${{secrets.QUIZZIE_HOST}}:/home/admin/

         
    - name: Deploying Application
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.QUIZZIE_HOST }}
        username: ${{ secrets.QUIZZIE_USERNAME }}
        key: ${{ secrets.QUIZZIE_KEY }}
        port: ${{ secrets.QUIZZIE_PORT }}
        script: |
          bash ~/apps/script.sh
  
